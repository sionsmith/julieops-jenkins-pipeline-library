sasl.mechanism=OAUTHBEARER
security.protocol=SASL_PLAINTEXT
sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required username="{{ MDS_USERNAME }}" password="{{ MDS_PASSWORD }}" metadataServerUrls="{{ MDS_URL }}";
sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
topology.builder.access.control.class=com.purbon.kafka.topology.roles.RBACProvider
topology.builder.mds.server={{ MDS_URL }}
topology.builder.mds.user={{ MDS_USERNAME }}
topology.builder.mds.password={{ MDS_PASSWORD }}
topology.builder.mds.kafka.cluster.id={{ KAFKA_CLUSER_ID }}
schema.registry.url={{ SCHEMA_REGISTRY_URL }}
schema.registry.basic.auth.user.info={{ MDS_USERNAME }}:{{ MDS_PASSWORD }}
basic.auth.credentials.source=USER_INFO
topology.builder.mds.schema.registry.cluster.id={{ SCHEMA_REGISTRY_ID }}
topology.builder.mds.kafka.connect.cluster.id={{ CONNECT_CLUSTER_ID }}
topology.builder.mds.ksqldb.cluster.id={{ KSQL_CLUSTER_ID }}
topology.topic.prefix.separator=-
topology.project.prefix.format=
topology.topic.prefix.format={{ TOPIC_FORMAT }}
julie.instance.id=julieops_{{ TENANT_ID }}
julie.kafka.config.topic={{ TENANT_STATE_TOPIC_NAME }}
topology.builder.state.processor.class=com.purbon.kafka.topology.backend.KafkaBackend
allow.delete.topics=true
{% if MANAGED_PREFIXES_LEN > 1 %}
julie.multiple.context.per.dir.enabled=true
{% endif %}
{% for element in MANAGED_PREFIXES %}
topology.topic.managed.prefixes.{{ loop.index0 }}={{ element }}
{% endfor %}
julie.verify.remote.state=true
julie.roles={{ ROLES_FILE }}
allow.delete.bindings=true
